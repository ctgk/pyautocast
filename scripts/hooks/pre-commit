#!/bin/sh
#
# Called by "git commit" with no arguments. The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.

if git rev-parse --verify HEAD >/dev/null 2>&1
then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

gittop_dir=$(git rev-parse --show-toplevel)
hook_name=$(basename $0)

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
# Note that the use of brackets around a tr range is ok here, (it's
# even required, for portability to Solaris 10's /usr/bin/tr), since
# the square bracket bytes happen to fall in the designated range.
if test $(git diff --cached --name-only --diff-filter=A -z $against |
    LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
    cat <<\EOF
Error: Attempt to add a non-ASCII file name.
This can cause problems if you want to work with people on other platforms.
To be portable it is advisable to rename the file.
EOF
    exit 1
fi

# If there are whitespace errors, print the offending file names and fail.
git diff-index --check --cached $against --
if [ $? != 0 ]; then
    exit 1
fi

for script in check_encoding.sh check_pep8.sh; do
    hook=${gittop_dir}/scripts/${script}
    for file in $(git diff-index --cached --name-only --diff-filter=ACMR $against)
    do
        $hook $file
        if [ $? != 0 ]; then
            echo "Failed command: $script $file"
            exit 1
        fi
    done
done

for script in run_python_tests.sh check_unstaged_untracked.sh
do
    echo $script
    ${gittop_dir}/scripts/${script}
    if [ $? != 0 ]; then
        exit 1
    fi
done

exit 0
